/*
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fischermatte.strapi.client.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AuthChangePasswordPostRequest
 */
@JsonPropertyOrder({
  AuthChangePasswordPostRequest.JSON_PROPERTY_PASSWORD,
  AuthChangePasswordPostRequest.JSON_PROPERTY_CURRENT_PASSWORD,
  AuthChangePasswordPostRequest.JSON_PROPERTY_PASSWORD_CONFIRMATION
})
@JsonTypeName("_auth_change_password_post_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-12T14:53:45.709103541+01:00[Europe/Zurich]")
public class AuthChangePasswordPostRequest {
  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_CURRENT_PASSWORD = "currentPassword";
  private String currentPassword;

  public static final String JSON_PROPERTY_PASSWORD_CONFIRMATION = "passwordConfirmation";
  private String passwordConfirmation;

  public AuthChangePasswordPostRequest() {
  }

  public AuthChangePasswordPostRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(String password) {
    this.password = password;
  }


  public AuthChangePasswordPostRequest currentPassword(String currentPassword) {
    
    this.currentPassword = currentPassword;
    return this;
  }

   /**
   * Get currentPassword
   * @return currentPassword
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrentPassword() {
    return currentPassword;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrentPassword(String currentPassword) {
    this.currentPassword = currentPassword;
  }


  public AuthChangePasswordPostRequest passwordConfirmation(String passwordConfirmation) {
    
    this.passwordConfirmation = passwordConfirmation;
    return this;
  }

   /**
   * Get passwordConfirmation
   * @return passwordConfirmation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PASSWORD_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPasswordConfirmation() {
    return passwordConfirmation;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPasswordConfirmation(String passwordConfirmation) {
    this.passwordConfirmation = passwordConfirmation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthChangePasswordPostRequest authChangePasswordPostRequest = (AuthChangePasswordPostRequest) o;
    return Objects.equals(this.password, authChangePasswordPostRequest.password) &&
        Objects.equals(this.currentPassword, authChangePasswordPostRequest.currentPassword) &&
        Objects.equals(this.passwordConfirmation, authChangePasswordPostRequest.passwordConfirmation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(password, currentPassword, passwordConfirmation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthChangePasswordPostRequest {\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    currentPassword: ").append(toIndentedString(currentPassword)).append("\n");
    sb.append("    passwordConfirmation: ").append(toIndentedString(passwordConfirmation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

