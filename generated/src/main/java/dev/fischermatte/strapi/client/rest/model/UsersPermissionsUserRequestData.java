/*
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.fischermatte.strapi.client.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.fischermatte.strapi.client.rest.model.UploadFileRequestDataRelatedInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UsersPermissionsUserRequestData
 */
@JsonPropertyOrder({
  UsersPermissionsUserRequestData.JSON_PROPERTY_USERNAME,
  UsersPermissionsUserRequestData.JSON_PROPERTY_EMAIL,
  UsersPermissionsUserRequestData.JSON_PROPERTY_PROVIDER,
  UsersPermissionsUserRequestData.JSON_PROPERTY_PASSWORD,
  UsersPermissionsUserRequestData.JSON_PROPERTY_RESET_PASSWORD_TOKEN,
  UsersPermissionsUserRequestData.JSON_PROPERTY_CONFIRMATION_TOKEN,
  UsersPermissionsUserRequestData.JSON_PROPERTY_CONFIRMED,
  UsersPermissionsUserRequestData.JSON_PROPERTY_BLOCKED,
  UsersPermissionsUserRequestData.JSON_PROPERTY_ROLE
})
@JsonTypeName("UsersPermissionsUserRequest_data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-12T14:53:45.709103541+01:00[Europe/Zurich]")
public class UsersPermissionsUserRequestData {
  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private String provider;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_RESET_PASSWORD_TOKEN = "resetPasswordToken";
  private String resetPasswordToken;

  public static final String JSON_PROPERTY_CONFIRMATION_TOKEN = "confirmationToken";
  private String confirmationToken;

  public static final String JSON_PROPERTY_CONFIRMED = "confirmed";
  private Boolean confirmed;

  public static final String JSON_PROPERTY_BLOCKED = "blocked";
  private Boolean blocked;

  public static final String JSON_PROPERTY_ROLE = "role";
  private UploadFileRequestDataRelatedInner role;

  public UsersPermissionsUserRequestData() {
  }

  public UsersPermissionsUserRequestData username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public UsersPermissionsUserRequestData email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public UsersPermissionsUserRequestData provider(String provider) {
    
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvider(String provider) {
    this.provider = provider;
  }


  public UsersPermissionsUserRequestData password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "*******", value = "")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public UsersPermissionsUserRequestData resetPasswordToken(String resetPasswordToken) {
    
    this.resetPasswordToken = resetPasswordToken;
    return this;
  }

   /**
   * Get resetPasswordToken
   * @return resetPasswordToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResetPasswordToken() {
    return resetPasswordToken;
  }


  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResetPasswordToken(String resetPasswordToken) {
    this.resetPasswordToken = resetPasswordToken;
  }


  public UsersPermissionsUserRequestData confirmationToken(String confirmationToken) {
    
    this.confirmationToken = confirmationToken;
    return this;
  }

   /**
   * Get confirmationToken
   * @return confirmationToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFIRMATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConfirmationToken() {
    return confirmationToken;
  }


  @JsonProperty(JSON_PROPERTY_CONFIRMATION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfirmationToken(String confirmationToken) {
    this.confirmationToken = confirmationToken;
  }


  public UsersPermissionsUserRequestData confirmed(Boolean confirmed) {
    
    this.confirmed = confirmed;
    return this;
  }

   /**
   * Get confirmed
   * @return confirmed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFIRMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConfirmed() {
    return confirmed;
  }


  @JsonProperty(JSON_PROPERTY_CONFIRMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfirmed(Boolean confirmed) {
    this.confirmed = confirmed;
  }


  public UsersPermissionsUserRequestData blocked(Boolean blocked) {
    
    this.blocked = blocked;
    return this;
  }

   /**
   * Get blocked
   * @return blocked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBlocked() {
    return blocked;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlocked(Boolean blocked) {
    this.blocked = blocked;
  }


  public UsersPermissionsUserRequestData role(UploadFileRequestDataRelatedInner role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UploadFileRequestDataRelatedInner getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(UploadFileRequestDataRelatedInner role) {
    this.role = role;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersPermissionsUserRequestData usersPermissionsUserRequestData = (UsersPermissionsUserRequestData) o;
    return Objects.equals(this.username, usersPermissionsUserRequestData.username) &&
        Objects.equals(this.email, usersPermissionsUserRequestData.email) &&
        Objects.equals(this.provider, usersPermissionsUserRequestData.provider) &&
        Objects.equals(this.password, usersPermissionsUserRequestData.password) &&
        Objects.equals(this.resetPasswordToken, usersPermissionsUserRequestData.resetPasswordToken) &&
        Objects.equals(this.confirmationToken, usersPermissionsUserRequestData.confirmationToken) &&
        Objects.equals(this.confirmed, usersPermissionsUserRequestData.confirmed) &&
        Objects.equals(this.blocked, usersPermissionsUserRequestData.blocked) &&
        Objects.equals(this.role, usersPermissionsUserRequestData.role);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, email, provider, password, resetPasswordToken, confirmationToken, confirmed, blocked, role);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersPermissionsUserRequestData {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    resetPasswordToken: ").append(toIndentedString(resetPasswordToken)).append("\n");
    sb.append("    confirmationToken: ").append(toIndentedString(confirmationToken)).append("\n");
    sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
    sb.append("    blocked: ").append(toIndentedString(blocked)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

